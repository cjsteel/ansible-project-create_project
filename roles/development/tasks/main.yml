---
# tasks file for ansible-role-development

- name: "ensure for the development project repository (clone)"
  become: false
  git:
    bare        : 'no'
    clone       : 'yes'
    dest        : '{{ development_repository }}'
#    executable  : '/usr/bin/git'
    force       : 'no'
    remote      : 'origin'
    repo        : '{{ development_origin_master_repository }}'
    accept_hostkey : '{{ create_project_accept_hostkey }}'
#    track_submodules : 'no'
#    version     : 'release-0.22'

## template development repositories .git/hooks/post-commit

- name: 'template development repos .git/hooks/post-commit'
  become: false
  template:
    backup  : yes
    src     : 'hooks/post-commit.j2'
    dest    : '{{ development_repository }}/.git/hooks/post-commit'
    owner   : '{{ development_user }}'
    group   : '{{ development_group }}'
    mode    : '{{ development_mode }}'
#  when: ansible_distribution == "CentOS" 

- name: "Execute 'git remote add production' in the development repo"
  command: 'git remote add production {{ production_repository_url }}'
  args:
    chdir: '{{ development_repository }}'
  ignore_errors: yes
#    creates: '{{ project_root_path }}/added_prod_remote_to_dev_repo'

# START TESTING

## git pull

- name: "Execute 'git pull' in the development repo"
  command: 'git pull'
  args:
    chdir: '{{ development_repository }}'
#  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True
## create some content

- name: "Execute an 'echo create_project test >> README.md' in the development repo"
  shell: 'echo "create_project test" >> {{ development_repository }}/README.md'
  args:
    chdir: '{{ development_repository }}'
#  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True

- name: "Execute 'git add README.md' in the development repo"
  command: 'git add README.md'
  args:
    chdir: '{{ development_repository }}'
#  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True


- name: "Execute a 'git commit' in the development repo"
  command: "git commit -m 'create_project test'"
  args:
    chdir: '{{ development_repository }}'
#  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True

# check staging

- name: "Execute 'cat README.md' in the development repo"
  command: 'cat README.md | grep "create_project test"'
  args:
    chdir: '{{ development_repository }}'
  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True

## production

### check production

- name: "Execute 'git push production master' in the development repo"
  command: 'git push production master'
  args:
    chdir: '{{ development_repository }}'
  when: create_project_testing is defined and create_project_testing == True

- name: "Execute 'cat README.md' in the production server directory"
  command: 'cat README.md | grep "create_project test"'
  args:
    chdir: '{{ production_server_dir }}'
  ignore_errors: yes
  when: create_project_testing is defined and create_project_testing == True

## origin

### push to origin

- name: "Execute 'git push production master' in the development repo"
  command: 'git push origin master'
  args:
    chdir: '{{ development_repository }}'
  when: create_project_testing is defined and create_project_testing == True


